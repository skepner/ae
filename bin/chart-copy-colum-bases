#! /usr/bin/env python3
import os, sys, re, json, argparse, traceback
from pathlib import Path
import ae_backend

def main(args: argparse.Namespace):
    chart_cb = ae_backend.chart_v3.Chart(args.cb_from)
    cb_cb = chart_cb.column_bases()
    print("from_cb", cb_cb)
    chart = ae_backend.chart_v3.Chart(args.source)
    output_cb = chart.column_bases()
    # print("output_cb", output_cb)

    common = ae_backend.chart_v3.CommonAntigensSera(chart_cb, chart, "strict")
    # common.sera_only()
    print("common sera", common.sera())

    for s1, s2 in common.sera():
        output_cb[s2] = cb_cb[s1]
    print("output_cb", output_cb)
    # print(cb_cb == output_cb)

    chart.remove_all_projections()
    # chart.forced_column_bases()

    # chart.write(args.output)


try:
    parser = argparse.ArgumentParser(description=__doc__, formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument("cb_from", type=Path)
    parser.add_argument("source", type=Path)
    parser.add_argument("output", type=Path)
    args = parser.parse_args()
    exit_code = main(args) or 0
except Exception as err:
    print(f"> ERROR: {err}\n{traceback.format_exc()}", file=sys.stderr)
    exit_code = 1
exit(exit_code)
